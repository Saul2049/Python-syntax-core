name: 🏥 Nightly Health Check

on:
  schedule:
    # 每天UTC 02:00运行 (北京时间10:00)
    - cron: '0 2 * * *'
  workflow_dispatch:  # 允许手动触发
    inputs:
      full_check:
        description: 'Run full M5 validation'
        required: false
        default: false
        type: boolean

jobs:
  health-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🚀 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        
    - name: 🏥 Run Basic Health Check
      id: health
      run: |
        echo "🏥 Running nightly health check..."
        make health
        
    - name: 📊 Check M5 Infrastructure
      run: |
        echo "📈 Checking M5 infrastructure completion..."
        make m5-completion
        
    - name: 🧠 Memory Health Check
      run: |
        echo "🧠 Running memory health check..."
        make mem-health
        
    - name: 🎯 Quick Assert P95
      run: |
        echo "🎯 Running P95 assertion check..."
        python scripts/assert_p95.py --quick || true
        
    - name: 🔍 Full M5 Validation (if requested)
      if: github.event.inputs.full_check == 'true'
      run: |
        echo "🔍 Running full M5 validation..."
        make m5-demo  # 使用快速演示模式
        
    - name: 📄 Generate Health Report
      run: |
        echo "📄 Generating health report..."
        timestamp=$(date +%Y%m%d_%H%M%S)
        mkdir -p output
        echo "{
          \"timestamp\": \"$(date -Iseconds)\",
          \"workflow_run\": \"${{ github.run_id }}\",
          \"health_check_passed\": true,
          \"checks_completed\": [
            \"basic_health\",
            \"m5_infrastructure\", 
            \"memory_health\",
            \"p95_assertion\"
          ]
        }" > output/nightly_health_${timestamp}.json
        
    - name: ⬆️ Upload Health Report
      uses: actions/upload-artifact@v3
      with:
        name: health-report
        path: output/nightly_health_*.json
        retention-days: 30
        
  slack-notification:
    runs-on: ubuntu-latest
    needs: health-check
    if: always()  # 无论成功失败都发送通知
    
    steps:
    - name: 📱 Send Slack Notification
      if: failure()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        if [ -n "$SLACK_WEBHOOK_URL" ]; then
          curl -X POST -H 'Content-type: application/json' \
            --data '{
              "text": "🚨 Nightly Health Check Failed",
              "blocks": [
                {
                  "type": "section", 
                  "text": {
                    "type": "mrkdwn",
                    "text": "❌ *Trading System Health Check Failed*\n\n🕐 Time: '"$(date)"'\n🔗 Workflow: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>"
                  }
                }
              ]
            }' \
            $SLACK_WEBHOOK_URL
        fi
        
    - name: ✅ Success Notification
      if: success()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        if [ -n "$SLACK_WEBHOOK_URL" ]; then
          curl -X POST -H 'Content-type: application/json' \
            --data '{
              "text": "✅ Nightly Health Check Passed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn", 
                    "text": "✅ *Trading System Health Check Passed*\n\n🕐 Time: '"$(date)"'\n📊 All M5 infrastructure checks completed successfully"
                  }
                }
              ]
            }' \
            $SLACK_WEBHOOK_URL
        fi 