name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # 安装运行依赖
        pip install -r requirements.txt
        # 安装开发依赖（测试、代码质量工具等）
        pip install -r dev-requirements.txt
        # 安装项目本身（开发模式）
        pip install -e .

    - name: Run linting
      run: |
        # 代码格式检查 - 只检查核心代码目录
        black --check src/ tests/
        isort --check src/ tests/
        flake8 src/ tests/ --count --max-complexity=10 --max-line-length=100 --statistics --extend-ignore=E501,E402,W503,F403,F405,E722,E203

    - name: Run quick CI tests
      run: |
        # 快速CI测试
        python scripts/ci_test.py

    - name: Run test suite with coverage
      run: |
        # 使用pip install -e .后不需要设置PYTHONPATH
        # 运行测试并生成覆盖率报告，使用 .coveragerc 配置排除 legacy 目录
        python -m pytest --maxfail=1 --disable-warnings -v \
          --cov=src \
          --cov-config=.coveragerc \
          --cov-report=term-missing \
          --cov-report=xml:coverage.xml \
          --cov-report=html:htmlcov

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: always()
      with:
        file: coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
