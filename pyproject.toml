[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "trading_framework"
version = "0.1.0"
description = "A modular Python framework for backtesting algorithmic trading strategies"
readme = "README.md"
authors = [
    {name = "Saul2049"}
]
requires-python = ">=3.8"
dependencies = [
    "pandas==2.0.3",
    "numpy==1.25.1",
    "matplotlib==3.7.2",
    "tqdm>=4.66.1",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Programming Language :: Python :: 3",
    "Topic :: Office/Business :: Financial :: Investment",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--verbose"

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
# Default rules for src/ and tests/
select = ["E", "F", "W", "C90"]
ignore = []

[tool.ruff.lint.per-file-ignores]
# All files use the same strict standards
# No special exceptions for scripts directory

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/legacy/*",
    "legacy/*",
    "*legacy*",
    "*/venv/*",
    "*/.venv/*",
    "*/site-packages/*",
    "*/dist-packages/*",
    "*/__pycache__/*",
    "*/build/*",
    "*/dist/*",
    "setup.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"